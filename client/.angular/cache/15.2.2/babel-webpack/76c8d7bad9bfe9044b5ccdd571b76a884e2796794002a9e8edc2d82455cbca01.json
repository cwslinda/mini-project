{"ast":null,"code":"import { HttpHeaders, HttpParams } from \"@angular/common/http\";\nimport { firstValueFrom, lastValueFrom } from \"rxjs\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class CommentService {\n  constructor(http) {\n    this.http = http;\n  }\n  postComment(formData) {\n    console.log(\"in service - postComment\");\n    console.log(formData);\n    return firstValueFrom(this.http.post(`api/comment/save`, formData));\n  }\n  getComments(bookId) {\n    const params = new HttpParams().set(\"bookId\", bookId);\n    const headers = new HttpHeaders().set('content-type', 'application/json').set('Access-Control-Allow-Origin', '*');\n    return lastValueFrom(this.http.get(`api/${bookId}/comments`, {\n      headers,\n      params\n    }));\n  }\n}\nCommentService.ɵfac = function CommentService_Factory(t) {\n  return new (t || CommentService)(i0.ɵɵinject(i1.HttpClient));\n};\nCommentService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: CommentService,\n  factory: CommentService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":"AAAA,SAAqBA,WAAW,EAAEC,UAAU,QAAQ,sBAAsB;AAE1E,SAASC,cAAc,EAAQC,aAAa,QAAQ,MAAM;;;AAM1D,OAAM,MAAOC,cAAc;EAEvBC,YAAoBC,IAAgB;IAAhB,SAAI,GAAJA,IAAI;EAAgB;EAG5CC,WAAW,CAACC,QAAkB;IAC1BC,OAAO,CAACC,GAAG,CAAC,0BAA0B,CAAC;IAEvCD,OAAO,CAACC,GAAG,CAACF,QAAQ,CAAC;IAErB,OAAON,cAAc,CACjB,IAAI,CAACI,IAAI,CAACK,IAAI,CAAM,kBAAkB,EAAEH,QAAQ,CAAC,CACpD;EACL;EAGCI,WAAW,CAACC,MAAc;IAEvB,MAAMC,MAAM,GAAG,IAAIb,UAAU,EAAE,CAACc,GAAG,CAAC,QAAQ,EAAEF,MAAM,CAAC;IAErD,MAAMG,OAAO,GAAG,IAAIhB,WAAW,EAAE,CAChBe,GAAG,CAAC,cAAc,EAAE,kBAAkB,CAAC,CACvCA,GAAG,CAAC,6BAA6B,EAAE,GAAG,CAAC;IAExD,OAAOZ,aAAa,CAAC,IAAI,CAACG,IAAI,CAACW,GAAG,CAAkB,OAAOJ,MAAM,WAAW,EAAE;MAACG,OAAO;MAAEF;IAAM,CAAC,CAAC,CAAC;EACrG;;AAzBaV,cAAc;mBAAdA,cAAc;AAAA;AAAdA,cAAc;SAAdA,cAAc;EAAAc,SAAdd,cAAc;EAAAe,YAFX;AAAM","names":["HttpHeaders","HttpParams","firstValueFrom","lastValueFrom","CommentService","constructor","http","postComment","formData","console","log","post","getComments","bookId","params","set","headers","get","factory","providedIn"],"sourceRoot":"","sources":["/Users/cws/Desktop/online-books-portal/client/src/app/services/comment.service.ts"],"sourcesContent":["import { HttpClient, HttpHeaders, HttpParams } from \"@angular/common/http\";\nimport { Injectable } from \"@angular/core\";\nimport { firstValueFrom, last, lastValueFrom } from \"rxjs\";\nimport { Book, CommentResult } from \"../models\";\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class CommentService{\n\n    constructor(private http: HttpClient) { }\n\n\npostComment(formData: FormData): Promise<any>{\n    console.log(\"in service - postComment\")\n\n    console.log(formData)\n\n    return firstValueFrom(\n        this.http.post<any>(`api/comment/save`, formData)\n    )\n}\n\n\n getComments(bookId: string): Promise<CommentResult[]>{\n\n    const params = new HttpParams().set(\"bookId\", bookId)\n\n    const headers = new HttpHeaders()\n                    .set('content-type', 'application/json')\n                    .set('Access-Control-Allow-Origin', '*')\n\n    return lastValueFrom(this.http.get<CommentResult[]>(`api/${bookId}/comments`, {headers, params}))\n}\n}"]},"metadata":{},"sourceType":"module","externalDependencies":[]}