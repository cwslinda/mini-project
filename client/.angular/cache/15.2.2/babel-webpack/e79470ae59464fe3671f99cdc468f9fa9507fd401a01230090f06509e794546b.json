{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"../services/login.service\";\nexport class LoginComponent {\n  constructor(fb, loginSvc) {\n    this.fb = fb;\n    this.loginSvc = loginSvc;\n  }\n  ngOnInit() {\n    this.initForm();\n  }\n  processLogin() {\n    const user = this.loginForm.value;\n    this.loginSvc.saveuser(user).then(result => {\n      console.info(\">>> result\", result);\n      this.initForm();\n    }).catch(error => {\n      console.info('>>>> error: ', error);\n    });\n  }\n  initForm() {\n    this.loginForm = this.createForm();\n    if (this.values$) {\n      this.values$.unsubscribe();\n      this.state$.unsubscribe();\n    }\n    this.values$ = this.loginForm.valueChanges.subscribe(values => {\n      console.info('>>> values: ', values);\n    });\n    this.state$ = this.loginForm.statusChanges.subscribe(state => {\n      console.info('>>> state: ', state);\n    });\n  }\n  createForm() {\n    return this.fb.group({\n      username: this.fb.control('', [Validators.required]),\n      password: this.fb.control('', [Validators.required])\n    });\n  }\n}\nLoginComponent.ɵfac = function LoginComponent_Factory(t) {\n  return new (t || LoginComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.LoginService));\n};\nLoginComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: LoginComponent,\n  selectors: [[\"app-login\"]],\n  decls: 19,\n  vars: 1,\n  consts: [[3, \"formGroup\", \"ngSubmit\"], [\"type\", \"text\", \"size\", \"30\", \"placeholder\", \"Username\", \"formControlName\", \"username\"], [\"type\", \"tel\", \"size\", \"30\", \"placeholder\", \"Password\", \"formControlName\", \"password\"], [\"type\", \"submit\"]],\n  template: function LoginComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"h2\");\n      i0.ɵɵtext(1, \"Login\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(2, \"form\", 0);\n      i0.ɵɵlistener(\"ngSubmit\", function LoginComponent_Template_form_ngSubmit_2_listener() {\n        return ctx.processLogin();\n      });\n      i0.ɵɵelementStart(3, \"table\")(4, \"tr\")(5, \"td\");\n      i0.ɵɵtext(6, \"Username:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(7, \"td\");\n      i0.ɵɵelement(8, \"input\", 1);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(9, \"tr\")(10, \"td\");\n      i0.ɵɵtext(11, \"Password:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(12, \"td\");\n      i0.ɵɵelement(13, \"input\", 2);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(14, \"tr\");\n      i0.ɵɵelement(15, \"td\");\n      i0.ɵɵelementStart(16, \"td\")(17, \"button\", 3);\n      i0.ɵɵtext(18, \"Login\");\n      i0.ɵɵelementEnd()()()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"formGroup\", ctx.loginForm);\n    }\n  },\n  dependencies: [i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.FormControlName],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"AACA,SAAiCA,UAAU,QAAQ,gBAAgB;;;;AAUnE,OAAM,MAAOC,cAAc;EAOzBC,YAAoBC,EAAe,EAAUC,QAAsB;IAA/C,OAAE,GAAFD,EAAE;IAAuB,aAAQ,GAARC,QAAQ;EAAkB;EAKvEC,QAAQ;IACN,IAAI,CAACC,QAAQ,EAAE;EACjB;EAIAC,YAAY;IACV,MAAMC,IAAI,GAAS,IAAI,CAACC,SAAS,CAACC,KAAa;IAC/C,IAAI,CAACN,QAAQ,CAACO,QAAQ,CAACH,IAAI,CAAC,CACzBI,IAAI,CAACC,MAAM,IAAG;MACbC,OAAO,CAACC,IAAI,CAAC,YAAY,EAAEF,MAAM,CAAC;MAClC,IAAI,CAACP,QAAQ,EAAE;IACjB,CAAC,CAAC,CACDU,KAAK,CAACC,KAAK,IAAG;MACbH,OAAO,CAACC,IAAI,CAAC,cAAc,EAAEE,KAAK,CAAC;IACrC,CAAC,CAAC;EAGN;EAGQX,QAAQ;IACd,IAAI,CAACG,SAAS,GAAG,IAAI,CAACS,UAAU,EAAE;IAClC,IAAI,IAAI,CAACC,OAAO,EAAE;MAChB,IAAI,CAACA,OAAO,CAACC,WAAW,EAAE;MAC1B,IAAI,CAACC,MAAM,CAACD,WAAW,EAAE;;IAE3B,IAAI,CAACD,OAAO,GAAG,IAAI,CAACV,SAAS,CAACa,YAAY,CAACC,SAAS,CACjDC,MAAW,IAAI;MACdV,OAAO,CAACC,IAAI,CAAC,cAAc,EAAES,MAAM,CAAC;IACtC,CAAC,CACF;IACD,IAAI,CAACH,MAAM,GAAG,IAAI,CAACZ,SAAS,CAACgB,aAAa,CAACF,SAAS,CACjDG,KAAU,IAAI;MACbZ,OAAO,CAACC,IAAI,CAAC,aAAa,EAAEW,KAAK,CAAC;IACpC,CAAC,CACF;EACH;EAEQR,UAAU;IAChB,OAAO,IAAI,CAACf,EAAE,CAACwB,KAAK,CAAC;MACnBC,QAAQ,EAAE,IAAI,CAACzB,EAAE,CAAC0B,OAAO,CAAC,EAAE,EAAE,CAAE7B,UAAU,CAAC8B,QAAQ,CAAE,CAAC;MACtDC,QAAQ,EAAE,IAAI,CAAC5B,EAAE,CAAC0B,OAAO,CAAC,EAAE,EAAE,CAAE7B,UAAU,CAAC8B,QAAQ,CAAE;KACtD,CAAC;EACJ;;AAxDW7B,cAAc;mBAAdA,cAAc;AAAA;AAAdA,cAAc;QAAdA,cAAc;EAAA+B;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MCX3BC,0BAAI;MAAAA,qBAAK;MAAAA,iBAAK;MAEdA,+BAA0D;MAA5BA;QAAA,OAAYC,kBAAc;MAAA,EAAC;MACvDD,6BAAO;MAECA,yBAAS;MAAAA,iBAAK;MAClBA,0BAAI;MACFA,2BAA+E;MACjFA,iBAAK;MAEPA,0BAAI;MACEA,0BAAS;MAAAA,iBAAK;MAClBA,2BAAI;MACFA,4BAA8E;MAChFA,iBAAK;MAEPA,2BAAI;MACFA,sBAAS;MACTA,2BAAI;MACoBA,sBAAK;MAAAA,iBAAS;;;MAjBtCA,eAAuB;MAAvBA,yCAAuB","names":["Validators","LoginComponent","constructor","fb","loginSvc","ngOnInit","initForm","processLogin","user","loginForm","value","saveuser","then","result","console","info","catch","error","createForm","values$","unsubscribe","state$","valueChanges","subscribe","values","statusChanges","state","group","username","control","required","password","selectors","decls","vars","consts","template","i0","ctx"],"sourceRoot":"","sources":["/Users/cws/Desktop/online-books-portal/frontend/src/app/components/login.component.ts","/Users/cws/Desktop/online-books-portal/frontend/src/app/components/login.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Subscription } from 'rxjs';\nimport { User } from '../models';\nimport { LoginService } from '../services/login.service';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n\n\n  loginForm!: FormGroup\n  values$!: Subscription\n  state$!: Subscription\n\n  constructor(private fb: FormBuilder, private loginSvc: LoginService) { }\n  \n  \n  \n  \n  ngOnInit(): void {\n    this.initForm();\n  }\n\n\n\n  processLogin(){\n    const user: User = this.loginForm.value as User \n    this.loginSvc.saveuser(user)\n      .then(result => {\n        console.info(\">>> result\", result)\n        this.initForm()\n      })\n      .catch(error => {\n        console.info('>>>> error: ', error)\n      })\n\n  \n  }\n\n\n  private initForm() {\n    this.loginForm = this.createForm()\n    if (this.values$) {\n      this.values$.unsubscribe()\n      this.state$.unsubscribe()\n    }\n    this.values$ = this.loginForm.valueChanges.subscribe(\n      (values: any) => {\n        console.info('>>> values: ', values)\n      }\n    )\n    this.state$ = this.loginForm.statusChanges.subscribe(\n      (state: any) => {\n        console.info('>>> state: ', state)\n      }\n    )\n  }\n\n  private createForm(): FormGroup {\n    return this.fb.group({\n      username: this.fb.control('', [ Validators.required ]),\n      password: this.fb.control('', [ Validators.required ]),\n    })\n  }\n  \n\n\n\n\n\n}\n","<h2>Login</h2>\n\n<form [formGroup]=\"loginForm\" (ngSubmit)=\"processLogin()\">\n  <table>\n    <tr>\n      <td>Username:</td>\n      <td>\n        <input type=\"text\" size=\"30\" placeholder=\"Username\" formControlName=\"username\">\n      </td>\n    </tr>\n    <tr>\n      <td>Password:</td>\n      <td>\n        <input type=\"tel\" size=\"30\" placeholder=\"Password\" formControlName=\"password\">\n      </td>\n    </tr>\n    <tr>\n      <td></td>\n      <td>\n        <button type=\"submit\">Login</button>\n      </td>\n    </tr>\n  </table>\n\n</form>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}