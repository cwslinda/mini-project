{"ast":null,"code":"import { HttpHeaders, HttpParams } from \"@angular/common/http\";\nimport { lastValueFrom } from \"rxjs\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class BookService {\n  constructor(http) {\n    this.http = http;\n  }\n  getBooks(keyword) {\n    const params = new HttpParams().set(\"keyword\", keyword);\n    const headers = new HttpHeaders().set('content-type', 'application/json').set('Access-Control-Allow-Origin', '*');\n    return lastValueFrom(this.http.get(`api/search`, {\n      headers,\n      params\n    }));\n  }\n  getSingleBookById(bookId) {\n    // const params = new HttpParams().set(\"id\", bookId)\n    const headers = new HttpHeaders().set('content-type', 'application/json').set('Access-Control-Allow-Origin', '*');\n    return lastValueFrom(this.http.get(`/api/book/${bookId}`, {\n      headers\n    }));\n  }\n  getBooksFromUser(userId) {\n    const headers = new HttpHeaders().set('content-type', 'application/json').set('Access-Control-Allow-Origin', '*');\n    return lastValueFrom(this.http.get(`/api/user/${userId}`, {\n      headers\n    }));\n  }\n  saveBook(book, userId) {\n    const form = new FormData();\n    form.set(\"bookId\", book.id);\n    form.set(\"title\", book.title);\n    form.set(\"text\", book.description);\n    form.set(\"authors\", book.authors.toString());\n    form.set(\"publishedDate\", book.publishedDate);\n    form.set(\"urlLink\", book.urlLink);\n    form.set(\"imageUrl\", book.imageUrl);\n    form.set(\"previewLink\", book.previewLink);\n    form.set(\"userId\", userId);\n  }\n}\nBookService.ɵfac = function BookService_Factory(t) {\n  return new (t || BookService)(i0.ɵɵinject(i1.HttpClient));\n};\nBookService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: BookService,\n  factory: BookService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":"AAAA,SAAqBA,WAAW,EAAEC,UAAU,QAAQ,sBAAsB;AAE1E,SAASC,aAAa,QAAQ,MAAM;;;AAMpC,OAAM,MAAOC,WAAW;EAEpBC,YAAoBC,IAAgB;IAAhB,SAAI,GAAJA,IAAI;EAAc;EAG/BC,QAAQ,CAACC,OAAe;IAE3B,MAAMC,MAAM,GAAG,IAAIP,UAAU,EAAE,CAACQ,GAAG,CAAC,SAAS,EAAEF,OAAO,CAAC;IAEvD,MAAMG,OAAO,GAAG,IAAIV,WAAW,EAAE,CAChBS,GAAG,CAAC,cAAc,EAAE,kBAAkB,CAAC,CACvCA,GAAG,CAAC,6BAA6B,EAAE,GAAG,CAAC;IAExD,OAAOP,aAAa,CAAC,IAAI,CAACG,IAAI,CAACM,GAAG,CAAS,YAAY,EAAE;MAACD,OAAO;MAAEF;IAAM,CAAC,CAAC,CAAC;EAChF;EAGMI,iBAAiB,CAACC,MAAc;IACtC;IAEA,MAAMH,OAAO,GAAG,IAAIV,WAAW,EAAE,CAC9BS,GAAG,CAAC,cAAc,EAAE,kBAAkB,CAAC,CACvCA,GAAG,CAAC,6BAA6B,EAAE,GAAG,CAAC;IAE1C,OAAOP,aAAa,CAAC,IAAI,CAACG,IAAI,CAACM,GAAG,CAAO,aAAaE,MAAM,EAAE,EAAE;MAACH;IAAO,CAAC,CAAC,CACzE;EACF;EAEOI,gBAAgB,CAACC,MAAc;IAE7B,MAAML,OAAO,GAAG,IAAIV,WAAW,EAAE,CAChCS,GAAG,CAAC,cAAc,EAAE,kBAAkB,CAAC,CACvCA,GAAG,CAAC,6BAA6B,EAAE,GAAG,CAAC;IAE9C,OAAOP,aAAa,CAAC,IAAI,CAACG,IAAI,CAACM,GAAG,CAAM,aAAaI,MAAM,EAAE,EAAE;MAACL;IAAO,CAAC,CAAC,CAE1E;EACF;EAEOM,QAAQ,CAACC,IAAU,EAAEF,MAAc;IAE7B,MAAMG,IAAI,GAAG,IAAIC,QAAQ,EAAE;IAC3BD,IAAI,CAACT,GAAG,CAAC,QAAQ,EAAEQ,IAAI,CAACG,EAAE,CAAC;IAC3BF,IAAI,CAACT,GAAG,CAAC,OAAO,EAAEQ,IAAI,CAACI,KAAK,CAAC;IAC7BH,IAAI,CAACT,GAAG,CAAC,MAAM,EAAEQ,IAAI,CAACK,WAAW,CAAC;IAClCJ,IAAI,CAACT,GAAG,CAAC,SAAS,EAAEQ,IAAI,CAACM,OAAO,CAACC,QAAQ,EAAE,CAAC;IAC5CN,IAAI,CAACT,GAAG,CAAC,eAAe,EAAEQ,IAAI,CAACQ,aAAa,CAAC;IAC7CP,IAAI,CAACT,GAAG,CAAC,SAAS,EAAEQ,IAAI,CAACS,OAAO,CAAC;IACjCR,IAAI,CAACT,GAAG,CAAC,UAAU,EAAEQ,IAAI,CAACU,QAAQ,CAAC;IACnCT,IAAI,CAACT,GAAG,CAAC,aAAa,EAAEQ,IAAI,CAACW,WAAW,CAAC;IACzCV,IAAI,CAACT,GAAG,CAAC,QAAQ,EAAEM,MAAM,CAAC;EAEvC;;AApDUZ,WAAW;mBAAXA,WAAW;AAAA;AAAXA,WAAW;SAAXA,WAAW;EAAA0B,SAAX1B,WAAW;EAAA2B,YAFR;AAAM","names":["HttpHeaders","HttpParams","lastValueFrom","BookService","constructor","http","getBooks","keyword","params","set","headers","get","getSingleBookById","bookId","getBooksFromUser","userId","saveBook","book","form","FormData","id","title","description","authors","toString","publishedDate","urlLink","imageUrl","previewLink","factory","providedIn"],"sourceRoot":"","sources":["/Users/cws/Desktop/online-books-portal/frontend/src/app/services/book.service.ts"],"sourcesContent":["import { HttpClient, HttpHeaders, HttpParams } from \"@angular/common/http\";\nimport { Injectable } from \"@angular/core\";\nimport { lastValueFrom } from \"rxjs\";\nimport { Book } from \"../models\";\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class BookService{\n    \n    constructor(private http: HttpClient){}\n\n\n    public getBooks(keyword: string): Promise<Book[]>{\n\n        const params = new HttpParams().set(\"keyword\", keyword)\n\n        const headers = new HttpHeaders()\n                        .set('content-type', 'application/json')\n                        .set('Access-Control-Allow-Origin', '*')\n\n        return lastValueFrom(this.http.get<Book[]>(`api/search`, {headers, params}))\n    }\n\n\n   public getSingleBookById(bookId: string): Promise<Book>{\n    // const params = new HttpParams().set(\"id\", bookId)\n\n    const headers = new HttpHeaders()\n      .set('content-type', 'application/json')\n      .set('Access-Control-Allow-Origin', '*')\n\n    return lastValueFrom(this.http.get<Book>(`/api/book/${bookId}`, {headers})\n    )\n   }\n\n   public getBooksFromUser(userId: string): Promise<any>{\n\n            const headers = new HttpHeaders()\n            .set('content-type', 'application/json')\n            .set('Access-Control-Allow-Origin', '*')\n\n      return lastValueFrom(this.http.get<any>(`/api/user/${userId}`, {headers})\n      \n    )\n   }\n\n   public saveBook(book: Book, userId: string): Promise<Book>{\n\n                const form = new FormData()\n                form.set(\"bookId\", book.id)\n                form.set(\"title\", book.title)\n                form.set(\"text\", book.description)\n                form.set(\"authors\", book.authors.toString())\n                form.set(\"publishedDate\", book.publishedDate)\n                form.set(\"urlLink\", book.urlLink)\n                form.set(\"imageUrl\", book.imageUrl)\n                form.set(\"previewLink\", book.previewLink)\n                form.set(\"userId\", userId)\n\n   }\n\n   id: string\n   title: string\n   description: string\n   authors: []\n   publishedDate: string\n   urlLink: string\n   imageUrl: string\n   previewLink: string\n\n}\n\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}