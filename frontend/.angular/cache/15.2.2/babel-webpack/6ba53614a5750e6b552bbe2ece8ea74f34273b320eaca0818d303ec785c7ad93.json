{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"../services/login.service\";\nexport class LoginComponent {\n  constructor(fb, router, loginSvc) {\n    this.fb = fb;\n    this.router = router;\n    this.loginSvc = loginSvc;\n  }\n  ngOnInit() {\n    this.loginForm = this.createForm();\n  }\n  createUser() {\n    const formData = new FormData();\n    formData.set(\"username\", this.loginForm.value['username']);\n    formData.set(\"password\", this.loginForm.value['password']);\n    this.loginSvc.createUser(formData).then(result => {\n      this.id = result[\"id\"];\n    }).catch(error => {\n      console.log(error);\n    });\n    this.loginForm = this.createForm();\n  }\n  createForm() {\n    return this.fb.group({\n      username: this.fb.control('', [Validators.required]),\n      password: this.fb.control('', [Validators.required])\n    });\n  }\n}\nLoginComponent.ɵfac = function LoginComponent_Factory(t) {\n  return new (t || LoginComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.Router), i0.ɵɵdirectiveInject(i3.LoginService));\n};\nLoginComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: LoginComponent,\n  selectors: [[\"app-login\"]],\n  decls: 19,\n  vars: 1,\n  consts: [[3, \"formGroup\", \"ngSubmit\"], [\"type\", \"text\", \"size\", \"30\", \"placeholder\", \"Username\", \"formControlName\", \"username\"], [\"type\", \"text\", \"size\", \"30\", \"placeholder\", \"Password\", \"formControlName\", \"password\"], [\"type\", \"submit\"]],\n  template: function LoginComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"h2\");\n      i0.ɵɵtext(1, \"Login\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(2, \"form\", 0);\n      i0.ɵɵlistener(\"ngSubmit\", function LoginComponent_Template_form_ngSubmit_2_listener() {\n        return ctx.createUser();\n      });\n      i0.ɵɵelementStart(3, \"table\")(4, \"tr\")(5, \"td\");\n      i0.ɵɵtext(6, \"Username:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(7, \"td\");\n      i0.ɵɵelement(8, \"input\", 1);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(9, \"tr\")(10, \"td\");\n      i0.ɵɵtext(11, \"Password:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(12, \"td\");\n      i0.ɵɵelement(13, \"input\", 2);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(14, \"tr\");\n      i0.ɵɵelement(15, \"td\");\n      i0.ɵɵelementStart(16, \"td\")(17, \"button\", 3);\n      i0.ɵɵtext(18, \"Login\");\n      i0.ɵɵelementEnd()()()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"formGroup\", ctx.loginForm);\n    }\n  },\n  dependencies: [i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.FormControlName],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"AACA,SAAiCA,UAAU,QAAQ,gBAAgB;;;;;AAUnE,OAAM,MAAOC,cAAc;EAQzBC,YAAoBC,EAAe,EAAUC,MAAc,EAASC,QAAsB;IAAtE,OAAE,GAAFF,EAAE;IAAuB,WAAM,GAANC,MAAM;IAAiB,aAAQ,GAARC,QAAQ;EAAkB;EAI9FC,QAAQ;IACN,IAAI,CAACC,SAAS,GAAG,IAAI,CAACC,UAAU,EAAE;EAAE;EAEtCC,UAAU;IAER,MAAMC,QAAQ,GAAG,IAAIC,QAAQ,EAAE;IAC/BD,QAAQ,CAACE,GAAG,CAAC,UAAU,EAAE,IAAI,CAACL,SAAS,CAACM,KAAK,CAAC,UAAU,CAAC,CAAC;IAC1DH,QAAQ,CAACE,GAAG,CAAC,UAAU,EAAE,IAAI,CAACL,SAAS,CAACM,KAAK,CAAC,UAAU,CAAC,CAAC;IAG1D,IAAI,CAACR,QAAQ,CAACI,UAAU,CAACC,QAAQ,CAAC,CAACI,IAAI,CAACC,MAAM,IAAG;MAC/C,IAAI,CAACC,EAAE,GAAGD,MAAM,CAAC,IAAI,CAAC;IACxB,CAAC,CAAC,CAACE,KAAK,CAACC,KAAK,IAAG;MACfC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;IACpB,CAAC,CAAC;IAIF,IAAI,CAACX,SAAS,GAAG,IAAI,CAACC,UAAU,EAAE;EACpC;EAIQA,UAAU;IAChB,OAAO,IAAI,CAACL,EAAE,CAACkB,KAAK,CAAC;MACnBC,QAAQ,EAAE,IAAI,CAACnB,EAAE,CAACoB,OAAO,CAAC,EAAE,EAAE,CAAEvB,UAAU,CAACwB,QAAQ,CAAE,CAAC;MACtDC,QAAQ,EAAE,IAAI,CAACtB,EAAE,CAACoB,OAAO,CAAC,EAAE,EAAE,CAAEvB,UAAU,CAACwB,QAAQ,CAAE;KACtD,CAAC;EACJ;;AAxCWvB,cAAc;mBAAdA,cAAc;AAAA;AAAdA,cAAc;QAAdA,cAAc;EAAAyB;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MCX3BC,0BAAI;MAAAA,qBAAK;MAAAA,iBAAK;MAEdA,+BAAwD;MAA1BA;QAAA,OAAYC,gBAAY;MAAA,EAAC;MACrDD,6BAAO;MAECA,yBAAS;MAAAA,iBAAK;MAClBA,0BAAI;MACFA,2BAA+E;MACjFA,iBAAK;MAEPA,0BAAI;MACEA,0BAAS;MAAAA,iBAAK;MAClBA,2BAAI;MACFA,4BAA+E;MACjFA,iBAAK;MAEPA,2BAAI;MACFA,sBAAS;MACTA,2BAAI;MACoBA,sBAAK;MAAAA,iBAAS;;;MAjBtCA,eAAuB;MAAvBA,yCAAuB","names":["Validators","LoginComponent","constructor","fb","router","loginSvc","ngOnInit","loginForm","createForm","createUser","formData","FormData","set","value","then","result","id","catch","error","console","log","group","username","control","required","password","selectors","decls","vars","consts","template","i0","ctx"],"sourceRoot":"","sources":["/Users/cws/Desktop/online-books-portal/frontend/src/app/components/login.component.ts","/Users/cws/Desktop/online-books-portal/frontend/src/app/components/login.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { Subscription } from 'rxjs';\nimport { LoginService } from '../services/login.service';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n\n\n  loginForm!: FormGroup\n  values$!: Subscription\n  state$!: Subscription\n  id!: string \n\n  constructor(private fb: FormBuilder, private router: Router,private loginSvc: LoginService) { }\n\n\n \n  ngOnInit(): void {\n    this.loginForm = this.createForm()  }\n\n  createUser(){\n\n    const formData = new FormData()\n    formData.set(\"username\", this.loginForm.value['username'])\n    formData.set(\"password\", this.loginForm.value['password'])\n\n\n    this.loginSvc.createUser(formData).then(result => {\n      this.id = result[\"id\"]\n    }).catch(error => {\n      console.log(error)\n    })\n\n    \n \n    this.loginForm = this.createForm()\n  }\n\n \n\n  private createForm(): FormGroup {\n    return this.fb.group({\n      username: this.fb.control('', [ Validators.required ]),\n      password: this.fb.control('', [ Validators.required ]),\n    })\n  }\n  \n\n\n\n\n\n}\n","<h2>Login</h2>\n\n<form [formGroup]=\"loginForm\" (ngSubmit)=\"createUser()\">\n  <table>\n    <tr>\n      <td>Username:</td>\n      <td>\n        <input type=\"text\" size=\"30\" placeholder=\"Username\" formControlName=\"username\">\n      </td>\n    </tr>\n    <tr>\n      <td>Password:</td>\n      <td>\n        <input type=\"text\" size=\"30\" placeholder=\"Password\" formControlName=\"password\">\n      </td>\n    </tr>\n    <tr>\n      <td></td>\n      <td>\n        <button type=\"submit\">Login</button>\n      </td>\n    </tr>\n  </table>\n\n</form>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}